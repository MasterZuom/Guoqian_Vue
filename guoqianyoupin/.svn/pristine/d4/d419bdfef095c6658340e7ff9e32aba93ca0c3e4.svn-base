define(function (require, exports, moduel) {
	var $ = require('jquery')
	require('../common/common')
	var api = require('../../api/index')
	var goodsApi = require('../../api/goods')
	var notifyApi = require('../../api/notification')
	var Vue = require('vue')
	var Vant = require('vant')
	var nav = require('../../components/nav')
	var slick = require('slick.min')
	var Lazyload = Vant.Lazyload

	Vue.use(nav)
	Vue.use(Vant)
	Vue.use(Lazyload)

	var app = new Vue({
		data: function () {
			return {
				hotList: [],
				searchHistroy: [],
				categories: [],
				banners: {},
				quickNav: {},
				ads: {},
				brands: [],
				recommends: [],
				topX: {
					slick: [],
					list: []
				},
				categoryProducts: [],
				loading: false,
				keyword: '',
				adPopup: false,
				show: {
					cateAll: false,
					searchPage: 0
				},
			}
		},
		created: function () {
			this.getCategories()
			this.getBanners()
			this.getBrands()
			this.getRecommend()
			this.getCategoryProducts()
			this.getMsg()
			this.searchHistroy = JSON.parse(window.localStorage.getItem('searchHistroy')) || []
			this.hotSearch()
		},
		watch: {
			'topX.slick': function () {
				setTimeout(function () {
					$('.slider').slick({
						dots: 0,
						infinite: true,
						centerMode: true,
						slidesToShow: 1,
						centerPadding: '20.5333vw',
						arrows: false
					});
				}, 0)
			}
		},
		mounted: function () {
			//this.$notify('');
		},
		methods: {
			$url: $url,
			getMsg: function () {
				//获取未读消息
				if (!loginInfo.token) {
					//未登录
					return
				}
				notifyApi.getMessage({
						page: 1,
						category: 'share'
					})
					.then(function (res) {
						if (res.code == 200) {
							
							//$url('notification_center.html?page=share')
						}
					})
			},
			hotSearch: function () {
				//热搜
				var _self = this
				return goodsApi.hotSearch()
					.then(function (res) {
						if (res.code == 200) {
							_self.hotList = res.data
						}
					})
					.fail(function () {

					})
			},
			removeHistroy: function () {
				//删除搜索历史
				this.searchHistroy = []
				window.localStorage.setItem('searchHistroy', JSON.stringify(this.searchHistroy))
			},
			showSearch: function () {
				this.show.searchPage = 1
				this.$nextTick(function () {
					this.$refs.searchInput.focus()
				})
			},
			subSearch: function () {
				if (!this.keyword) {
					return false
				}
				this.$url('goods_list.html?keyword=' + this.keyword)
			},
			getCategories: function () {
				//获取分类
				var _self = this
				return api.categories()
					.then(function (res) {
						if (res.code == 200) {
							_self.categories = res.data
						}
					})
					.fail(function () {
						_self.$notify('网络错误');
					})
					.always(function () {

					})
			},
			getBanners: function () {
				//获取 banner 数据
				var _self = this
				return api.adPositions()
					.then(function (res) {
						if (res.code == 200) {
							log(res.data)
							_self.banners = res.data[0]
							_self.quickNav = res.data[1]
							_self.ads = res.data[2]
						}
					})
					.fail(function () {
						_self.$notify('网络错误');
					})
					.always(function () {

					})
			},
			getBrands: function () {
				//获取品牌
				var _self = this
				return api.brands()
					.then(function (res) {
						if (res.code == 200) {
							res.data.forEach(function (v, i) {
								if (i < 8) {
									_self.brands.push(v)
								}
							})
						}
					})
					.fail(function () {
						_self.$notify('网络错误');
					})
					.always(function () {

					})
			},
			getRecommend: function () {
				var _self = this
				return api.recommendations()
					.then(function (res) {
						if (res.code == 200) {
							_self.recommends = res.data
							if (res.data[1]) {
								res.data[1].recommendProducts.forEach(function (v, i) {
									v.index = i + 1
									if (i < 6) {
										_self.topX.slick.push(v)
									} else {
										_self.topX.list.push(v)
									}
								})
							}
						}
					})
					.fail(function () {
						_self.$notify('网络错误');
					})
					.always(function () {

					})
			},
			getCategoryProducts: function () {
				var _self = this
				return api.categoryProducts()
					.then(function (res) {
						if (res.code == 200) {
							_self.categoryProducts = res.data
						}
					})
					.fail(function () {
						_self.$notify('网络错误');
					})
					.always(function () {

					})
			},
			quickLink: function (item) {
				//快捷导航
				if (item.title == '拼团') {
					$url('activity.html?type=groupBuy')
					return
				}
				if (item.title == '限时抢购') {
					$url('activity.html?type=flashSale')
					return
				}
				log(item)
			}

		}
	}).$mount('#page');

});